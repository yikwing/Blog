<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on yikwing`s Blog</title>
    <link>https://yikwing.github.io/posts/</link>
    <description>Recent content in Posts on yikwing`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 18 Feb 2019 11:40:26 +0000</lastBuildDate>
    
	<atom:link href="https://yikwing.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gradle 测试/正式包同时安装,BuildConfig 配置小技巧</title>
      <link>https://yikwing.github.io/2019/006/</link>
      <pubDate>Mon, 18 Feb 2019 11:40:26 +0000</pubDate>
      
      <guid>https://yikwing.github.io/2019/006/</guid>
      <description>1. 前言 Maybe 你会有这个烦恼，在开发的时候，你会需要经常切换正式/测试服务器地址开发,或者根据不同环境进行不同的配置,这时该怎么办?有人说，我手里</description>
    </item>
    
    <item>
      <title>使用Aria2&#43;Aria2Ng&#43;OneIndex&#43;OneDrive建立不限流量/离线BT下载/在线观看网盘</title>
      <link>https://yikwing.github.io/2019/003/</link>
      <pubDate>Tue, 22 Jan 2019 09:58:17 +0000</pubDate>
      
      <guid>https://yikwing.github.io/2019/003/</guid>
      <description>宝塔 #Centos系统 yum install -y wget &amp;amp;&amp;amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;amp;&amp;amp; sh install.sh #Ubuntu系统 wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;amp;&amp;amp; sudo bash install.sh #Debian系统 wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;amp;&amp;amp; bash install.sh 这里只需要安装 Nginx 和 php5.6 就可以了</description>
    </item>
    
    <item>
      <title>ubuntu从零开始搭建爬虫框架</title>
      <link>https://yikwing.github.io/2018/005/</link>
      <pubDate>Sat, 03 Mar 2018 11:40:26 +0000</pubDate>
      
      <guid>https://yikwing.github.io/2018/005/</guid>
      <description>更换 ubuntu apt 源 查看 ubuntu 开发代号 sudo lsb_release -a ## linux路径 sudo vim /etc/apt/sources.list deb http://mirrors.aliyun.com/ubuntu/ artful main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ artful-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ artful-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ artful-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ artful-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ artful main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/</description>
    </item>
    
    <item>
      <title>scrapy语法</title>
      <link>https://yikwing.github.io/2018/004/</link>
      <pubDate>Sat, 03 Mar 2018 11:37:26 +0000</pubDate>
      
      <guid>https://yikwing.github.io/2018/004/</guid>
      <description>xpath 语法 表达式 说明 article 选取所有 article 元素的所有子节点 /article 选取根元素 article article/a 选取所有属于 article 的子元素的 a 元素 //div 选取所有 div 子元素 article//div 选取所有属于 article 元素的后代 div 元素</description>
    </item>
    
    <item>
      <title>Mysql学习笔记</title>
      <link>https://yikwing.github.io/2018/001/</link>
      <pubDate>Sat, 03 Mar 2018 11:23:16 +0000</pubDate>
      
      <guid>https://yikwing.github.io/2018/001/</guid>
      <description>安装 MySql 服务 mac brew install mysql linux sudo apt-get insatll mysql-server sudo apt-get install mysql-client chsh -s `which zsh` 修改密码 sudo mysqld_safe --skin-grant-tables --skip-networking &amp;amp; &amp;gt; use mysql &amp;gt; update user set authentication_string=password(&#39;</description>
    </item>
    
    <item>
      <title>MySql服务安装及命令使用</title>
      <link>https://yikwing.github.io/2018/002/</link>
      <pubDate>Sat, 03 Mar 2018 11:19:11 +0000</pubDate>
      
      <guid>https://yikwing.github.io/2018/002/</guid>
      <description>安装 MySql 服务 mac brew install mysql linux sudo apt-get insatll mysql-server sudo apt-get install mysql-client 修改密码 sudo mysqld_safe --skin-grant-tables --skip-networking &amp;amp; &amp;gt; use mysql &amp;gt; update user set authentication_string=password(&#39;新密码&#39;</description>
    </item>
    
  </channel>
</rss>